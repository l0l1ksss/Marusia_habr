from parsing import *
registred_states = {}

develop_url="https://habr.com/ru/flows/develop/"#—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
admin_url="https://habr.com/ru/flows/admin/"#–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
design_url="https://habr.com/ru/flows/design/"#–¥–∏–∑–∞–π–Ω
management_url="https://habr.com/ru/flows/management/"#–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç
marketing_url="https://habr.com/ru/flows/marketing/"#–º–∞—Ä–∫–µ—Ç–∏–Ω–≥
popsci_url="https://habr.com/ru/flows/popsci/"#–Ω–∞—É—á–ø–æ–ø

def get_state(state_id):
    return registred_states[state_id]

def get_root_state():
    global root_state_id
    return registred_states[root_state_id]


class Transition:

    def __init__(self, to_id, synonims):
        self.to_id = to_id
        self.synonims = synonims

    def must_go(self, user_text):
        return user_text in self.synonims

    def get_dest_id(self):
        return self.to_id

class State:

    def __init__(self, id, text, transitions, default_transition, is_end=False):
        self.id = id
        self.text = text
        self.transitions = transitions
        self.default_transition = default_transition
        self.is_end=is_end

    def get_next_state(self, user_input):
        for transition in self.transitions:
            if transition.must_go(user_input):
                return get_state(transition.to_id)

        return get_state(self.default_transition)

    def register(self):
        global registred_states
        registred_states[self.id] = self

    def get_text(self):
        return self.text

    def get_id(self):
        return self.id

    def is_end_state(self):
        return self.is_end

def init():
    global root_state_id
    global admin_url
    State("100", "–ü—Ä–∏–≤–µ—Ç! –•–æ—Ç–∏—Ç–µ —É—Å–ª—ã—à–∞—Ç—å —Å–∞–º—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π?", [Transition("900",["–Ω–µ—Ç","–ù–µ—Ç"])], "101").register()

    State("101", "–ß—Ç–æ –≤–∞–º –ø–æ –¥—É—à–µ ? –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ, –¥–∏–∑–∞–π–Ω, –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –∞ –º–æ–∂–µ—Ç –Ω–∞—É—á–ø–æ–ø ? ", [
        Transition("900",["–Ω–µ—Ç","–ù–µ—Ç", "–ù–µ —Ö–æ—á—É", "–Ω–µ —Ö–æ—á—É", "–ù–µ–∞","–Ω–µ–∞"]),
        Transition("200", ["1","–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞","—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞","–ø–µ—Ä–≤–æ–µ","–ü–µ—Ä–≤–æ–µ"]),
        Transition("300", ["2","–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ","–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ","–í—Ç–æ—Ä–æ–µ","–≤—Ç–æ—Ä–æ–µ"]),
        Transition("400", ["3","–î–∏–∑–∞–π–Ω","–¥–∏–∑–∞–π–Ω","–¢—Ä–µ—Ç—å–µ","—Ç—Ä–µ—Ç—å–µ"]),
        Transition("500", ["4","–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç","–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç","–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ","–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ","—á–µ—Ç–≤–µ—Ä—Ç–æ–µ","—á–µ—Ç–≤—ë—Ä—Ç–æ–µ"]),
        Transition("600", ["5","–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥","–º–∞—Ä–∫–µ—Ç–∏–Ω–≥","–ü—è—Ç–æ–µ","–ø—è—Ç–æ–µ", "–ü—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–µ", "–ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–µ"]),
        Transition("700", ["6","–ø–æ—Å–ª–µ–¥–Ω–µ–µ","–ù–∞—É—á–ø–æ–ø","–Ω–∞—É—á–ø–æ–ø","–ü–æ—Å–ª–µ–¥–Ω–µ–µ"])
    ], None).register()

    State("200", f"–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å üëæ : {spisok(develop_url)} –ù–∞–∑–æ–≤–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ –Ω–æ–≤–æ—Å—Ç–∏",
          [
              Transition("210", ["1", "–ø–µ—Ä–≤–æ–µ", "–ü–µ—Ä–≤–æ–µ"]),
              Transition("211", ["2", "–í—Ç–æ—Ä–æ–µ", "–≤—Ç–æ—Ä–æ–µ"]),
              Transition("212", ["3", "–¢—Ä–µ—Ç—å–µ", "—Ç—Ä–µ—Ç—å–µ"]),
              Transition("213", ["4", "–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ", "–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ", "—á–µ—Ç–≤–µ—Ä—Ç–æ–µ", "—á–µ—Ç–≤—ë—Ä—Ç–æ–µ"]),
              Transition("214", ["5", "–ü—è—Ç–æ–µ", "–ø—è—Ç–æ–µ", "–ü–æ—Å–ª–µ–¥–Ω–µ–µ", "–ø–æ—Å–ª–µ–¥–Ω–µ–µ"])
          ], None).register()

    State("210", f"{tekst(ret_ssilka(develop_url,1))}",
          [Transition("900", [])], "900").register()

    State("211", f"{tekst(ret_ssilka(develop_url,2))}",
          [Transition("900", [])], "900").register()

    State("212", f"{tekst(ret_ssilka(develop_url,3))}",
          [Transition("900", [])], "900").register()

    State("213", f"{tekst(ret_ssilka(develop_url,4))}",
          [Transition("900", [])], "900").register()

    State("214", f"{tekst(ret_ssilka(develop_url,5))}",
          [Transition("900", [])], "900").register()

    State("300", f"–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å üë®‚ÄçüöÄ : {spisok(admin_url)} –ù–∞–∑–æ–≤–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ –Ω–æ–≤–æ—Å—Ç–∏",
          [
              Transition("310", ["1", "–ø–µ—Ä–≤–æ–µ", "–ü–µ—Ä–≤–æ–µ"]),
              Transition("311", ["2", "–í—Ç–æ—Ä–æ–µ", "–≤—Ç–æ—Ä–æ–µ"]),
              Transition("312", ["3", "–¢—Ä–µ—Ç—å–µ", "—Ç—Ä–µ—Ç—å–µ"]),
              Transition("313", ["4", "–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ", "–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ", "—á–µ—Ç–≤–µ—Ä—Ç–æ–µ", "—á–µ—Ç–≤—ë—Ä—Ç–æ–µ"]),
              Transition("314", ["5", "–ü—è—Ç–æ–µ", "–ø—è—Ç–æ–µ", "–ü–æ—Å–ª–µ–¥–Ω–µ–µ", "–ø–æ—Å–ª–µ–¥–Ω–µ–µ"])], "900").register()

    State("310", f"{tekst(ret_ssilka(admin_url,1))}",
          [Transition("900", [])], "900").register()

    State("311", f"{tekst(ret_ssilka(admin_url,2))}",
          [Transition("900", [])], "900").register()

    State("312", f"{tekst(ret_ssilka(admin_url,3))}",
          [Transition("900", [])], "900").register()

    State("313", f"{tekst(ret_ssilka(admin_url,4))}",
          [Transition("900", [])], "900").register()

    State("314", f"{tekst(ret_ssilka(admin_url,5))}",
          [Transition("900", [])], "900").register()

    State("400", f"–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å üé® : {spisok(design_url)} –ù–∞–∑–æ–≤–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ –Ω–æ–≤–æ—Å—Ç–∏",
          [
              Transition("410", ["1", "–ø–µ—Ä–≤–æ–µ", "–ü–µ—Ä–≤–æ–µ"]),
              Transition("411", ["2", "–í—Ç–æ—Ä–æ–µ", "–≤—Ç–æ—Ä–æ–µ"]),
              Transition("412", ["3", "–¢—Ä–µ—Ç—å–µ", "—Ç—Ä–µ—Ç—å–µ"]),
              Transition("413", ["4", "–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ", "–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ", "—á–µ—Ç–≤–µ—Ä—Ç–æ–µ", "—á–µ—Ç–≤—ë—Ä—Ç–æ–µ"]),
              Transition("414", ["5", "–ü—è—Ç–æ–µ", "–ø—è—Ç–æ–µ", "–ü–æ—Å–ª–µ–¥–Ω–µ–µ", "–ø–æ—Å–ª–µ–¥–Ω–µ–µ"])], "900").register()

    State("410", f"{tekst(ret_ssilka(design_url,1))}",
          [Transition("900", [])], "900").register()

    State("411", f"{tekst(ret_ssilka(design_url,2))}",
          [Transition("900", [])], "900").register()

    State("412", f"{tekst(ret_ssilka(design_url,3))}",
          [Transition("900", [])], "900").register()

    State("413", f"{tekst(ret_ssilka(design_url,4))}",
          [Transition("900", [])], "900").register()

    State("414", f"{tekst(ret_ssilka(design_url,5))}",
          [Transition("900", [])], "900").register()

    State("500", f"–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å üëî : {spisok(management_url)} –ù–∞–∑–æ–≤–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ –Ω–æ–≤–æ—Å—Ç–∏",
          [
              Transition("510", ["1", "–ø–µ—Ä–≤–æ–µ", "–ü–µ—Ä–≤–æ–µ"]),
              Transition("511", ["2", "–í—Ç–æ—Ä–æ–µ", "–≤—Ç–æ—Ä–æ–µ"]),
              Transition("512", ["3", "–¢—Ä–µ—Ç—å–µ", "—Ç—Ä–µ—Ç—å–µ"]),
              Transition("513", ["4", "–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ", "–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ", "—á–µ—Ç–≤–µ—Ä—Ç–æ–µ", "—á–µ—Ç–≤—ë—Ä—Ç–æ–µ"]),
              Transition("514", ["5", "–ü—è—Ç–æ–µ", "–ø—è—Ç–æ–µ", "–ü–æ—Å–ª–µ–¥–Ω–µ–µ", "–ø–æ—Å–ª–µ–¥–Ω–µ–µ"])], "900").register()

    State("510", f"{tekst(ret_ssilka(management_url,1))}",
          [Transition("900", [])], "900").register()

    State("511", f"{tekst(ret_ssilka(management_url,2))}",
          [Transition("900", [])], "900").register()

    State("512", f"{tekst(ret_ssilka(management_url,3))}",
          [Transition("900", [])], "900").register()

    State("513", f"{tekst(ret_ssilka(management_url,4))}",
          [Transition("900", [])], "900").register()

    State("514", f"{tekst(ret_ssilka(management_url,5))}",
          [Transition("900", [])], "900").register()

    State("600", f"–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å üõí : {spisok(marketing_url)} –ù–∞–∑–æ–≤–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ –Ω–æ–≤–æ—Å—Ç–∏",
          [
              Transition("610", ["1", "–ø–µ—Ä–≤–æ–µ", "–ü–µ—Ä–≤–æ–µ"]),
              Transition("611", ["2", "–í—Ç–æ—Ä–æ–µ", "–≤—Ç–æ—Ä–æ–µ"]),
              Transition("612", ["3", "–¢—Ä–µ—Ç—å–µ", "—Ç—Ä–µ—Ç—å–µ"]),
              Transition("613", ["4", "–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ", "–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ", "—á–µ—Ç–≤–µ—Ä—Ç–æ–µ", "—á–µ—Ç–≤—ë—Ä—Ç–æ–µ"]),
              Transition("614", ["5", "–ü—è—Ç–æ–µ", "–ø—è—Ç–æ–µ", "–ü–æ—Å–ª–µ–¥–Ω–µ–µ", "–ø–æ—Å–ª–µ–¥–Ω–µ–µ"])], "900").register()

    State("610", f"{tekst(ret_ssilka(marketing_url,1))}",
          [Transition("900", [])], "900").register()

    State("611", f"{tekst(ret_ssilka(marketing_url,2))}",
          [Transition("900", [])], "900").register()

    State("612", f"{tekst(ret_ssilka(marketing_url,3))}",
          [Transition("900", [])], "900").register()

    State("613", f"{tekst(ret_ssilka(marketing_url,4))}",
          [Transition("900", [])], "900").register()

    State("614", f"{tekst(ret_ssilka(marketing_url ,5))}",
          [Transition("900", [])], "900").register()

    State("700", f"–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å üëì : {spisok(popsci_url)} –ù–∞–∑–æ–≤–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ –Ω–æ–≤–æ—Å—Ç–∏",
          [
              Transition("710", ["1", "–ø–µ—Ä–≤–æ–µ", "–ü–µ—Ä–≤–æ–µ"]),
              Transition("711", ["2", "–í—Ç–æ—Ä–æ–µ", "–≤—Ç–æ—Ä–æ–µ"]),
              Transition("712", ["3", "–¢—Ä–µ—Ç—å–µ", "—Ç—Ä–µ—Ç—å–µ"]),
              Transition("713", ["4", "–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ", "–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ", "—á–µ—Ç–≤–µ—Ä—Ç–æ–µ", "—á–µ—Ç–≤—ë—Ä—Ç–æ–µ"]),
              Transition("714", ["5", "–ü—è—Ç–æ–µ", "–ø—è—Ç–æ–µ", "–ü–æ—Å–ª–µ–¥–Ω–µ–µ", "–ø–æ—Å–ª–µ–¥–Ω–µ–µ"])], "900").register()

    State("710", f"{tekst(ret_ssilka(popsci_url, 1))}",
          [Transition("900", [])], "900").register()

    State("711", f"{tekst(ret_ssilka(popsci_url, 2))}",
          [Transition("900", [])], "900").register()

    State("712", f"{tekst(ret_ssilka(popsci_url, 3))}",
          [Transition("900", [])], "900").register()

    State("713", f"{tekst(ret_ssilka(popsci_url, 4))}",
          [Transition("900", [])], "900").register()

    State("714", f"{tekst(ret_ssilka(popsci_url, 5))}",
          [Transition("900", [])], "900").register()


    State("900", "–ü–æ–∫–∞, —É–¥–∞—á–∏!", [], None, True).register()

    root_state_id="100"

init()


    #–•—Ä–∞–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π